*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
}

    /* Variable der gøre kodening af burgermenuen bliver mere responsive */
:root {
  --light-grey:#82808f;       /* farve defineres i varible for at gøre det nemmere at target */
  --dark-grey:#222222;
  --white:#fff;
  --yellow:#fcd04e;
  --bar-width: 60px;                                                                                  /* Definere breden af burgermenuen*/
  --bar-height: 8px;                                                                                  /* Definere højden af burgermenuen*/
  --hamburger-gap: 6px;                                                                               /* Ved at definere margin ville den skubbe andre variables under*/
  --foreground: var(--yellow);
  --background: var(--dark-grey);
  --hamburger-margin: 8px;
  --animation-timing: 200ms ease-in-out;

  /* simpel math - højde er lige med 3x bar height og 2x vores gap. Calc variable regner denne regnestyk ud for os */
  --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

.hamburger-menu {                                                                                    /* Laver de 2 streger ovenpå og under check boksen */
  --x-width: calc(var(--hamburger-height) * 1.41421356237);                                          /* Denne kode regner længden af linjerne når checkboxen er krydset af ved brug af trekantsberegning. Tallet det er ganget med er bare √2*/
  display: flex;
  flex-direction: column;
  gap: var(--hamburger-gap);
  width: fit-content;
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 2;                                                                                        /* Sørger for at burgermenuen er på toppen af sidebar */
  cursor: pointer;
}

.hamburger-menu:has(input:checked) {                                                                 /* Ændring af farve på burgermenu når den er checked */
  --foreground: var(--dark-grey);
  --background: var(--yellow);
}

.hamburger-menu:has(input:focus-visible)::before,                                                     /* Target de 3 linjer som burgermenuen har før*/
.hamburger-menu:has(input:focus-visible)::after,                                                      /* Target de 3 linjer som burgermenuen har efter*/
.hamburger-menu input:focus-visible {                                                                 /* Target checkboxen */
  border: 1px solid var(--background);
  box-shadow: 0 0 0 1px var(--foreground);
}

.hamburger-menu::before,
.hamburger-menu::after,
.hamburger-menu input {
  content: "";
  width: var(--bar-width);
  height: var(--bar-height);
  background-color: var(--foreground);
  border-radius: 9999px;
  transform-origin: left center;

  /* Denne linje animere transition når man klicker på checkboxen */
  transition: opacity var(--animation-timing), width var(--animation-timing),
    rotate var(--animation-timing), translate var(--animation-timing),
    background-color var(--animation-timing);
}

.hamburger-menu input {                                                                               /* Fjerner default checkbox */
  appearance: none;
  padding: 0;
  margin: 0;
  outline: none;
  pointer-events: none;                                                                               /* Gøre sådan at man ikke kan klicke på checkboxen. Dette er gjort pga. alt interation med checkbox skal ske i gennem label. Koden har gøre at man nu kan tryk hvor som helst på .burger-menu ville man check og uncheck ens checkbox*/
}

/* Forklaring af hvad linjen nedenfor target: Hvis burgermenu har en input der er checked, hvis ja target before elementet af burgermenuen */
.hamburger-menu:has(input:checked)::before {                                                          /* css til krydset når checkboxen er checked */
  rotate: 45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / -2);                                                          /* Regner translate for y-position, og da vi ville have den som halvdel af baren ville det være division med 2 ( x-position er 0 ) */
}

.hamburger-menu:has(input:checked)::after {
  rotate: -45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / 2);
}

.hamburger-menu input:checked {
  opacity: 0;
  width: 0;
}

.nav-bar{
    position: fixed; /*Sørg for at burgermenuen er placeres på topen af andre elementer i main*/
    z-index: 10;
}

.sidebar {
  transition: translate var(--animation-timing);
  translate: -100%;
  padding: 0.5rem 0rem;
  padding-top: calc(var(--hamburger-height) + var(--hamburger-margin) + 1rem);
  background-color: var(--yellow);
  color: var(--white);
  max-width: 25rem;
  min-height: 100vh;
  margin-right: 10px;
}

/* Forklaring af hvad linjen nedenfor target: hvis vi har en burgermenu der har en input som er checked ville sidebar blive selected*/
.hamburger-menu:has(input:checked) + .sidebar {
  translate: 0;
}

/* Navbar css */

header nav {                         /*Bestemt baggrundsfarve for navigationsbar*/
  background-color: var(--dark-grey);
  font-family:futura-pt, sans-serif;
}

nav ul{                  /*Styling af navigationsbar*/
  list-style: none;
  width: 100%;
  display: flex;
  justify-content: space-around;
  flex-direction: column;
}

nav ul li{               /*Definere position af navigationsbar listitem*/
  position: relative;
  padding: 1.5 1.5rem;
}

nav ul li a{             /*Styling af links i navigationsbar*/
  text-decoration: none;
  font-size: 1.55rem;
  padding: 1.5rem;
  color: var(--dark-grey);
  display: block;
  background: var(--yellow);
}

nav ul li a:hover{       /*Styling af navigationsbar under hover tilstand*/
  background: var(--dark-grey);
  color: var(--orange);
}

nav ul li ul{            /*Styling af dropdown menu i navbar*/
  position: static;      /*Sørg for at dropdown menu ikke overlapper eksisterende links*/
  display: block;
  display: none;        /*gør dropdown menu usynlig*/
  z-index: 10;          /*Styrer stablingrækkefølge højere værdi ligger øverst, i denne tilfælde ligger alt under ul øverst for alle andre elementer*/
}

nav ul li ul li{         /*Styling af list item i dropdown menu*/
  width: 100%;
  border-top: 0.5px solid var(--dark-grey);
}

nav ul li ul li ul{      /*Styling af nested dropdown menu*/
  left: 12.5rem;
  top: 0;
}

nav ul li:focus-within > ul,
nav ul li:hover > ul{     /*Definere display af dropdown menu på hover eller fokus*/
  display: block;
  z-index: 10;                     /*Styrer stablingrækkefølge højere værdi ligger øverst, i denne tilfælde ligger alt under ul øverst for alle andre elementer*/
}

header::after {                     /*Fjern floats efter header content*/
  content: "";
  display: table;
  clear: both;
}

nav ul.sub-menus{
height: auto;
overflow: hidden;
width: 170px;
position: absolute;
z-index: 10;
display: none;
}
nav ul.sub-menus li {
display: block;
text-align: left;
width: 100%;
}
nav ul.sub-menus a {
color: var(--dark-grey);
font-size: 1.25rem;
}
nav li:hover ul.sub-menus {
display: block
}
nav ul.sub-menus a:hover{
background: var(--dark-grey);
color: var(--white);
}

header{
    background-image: url(../img/header-bg.png);
    background-size: cover;
    height: 15.625rem;
}

header img{
    width: 25rem;
    padding-top: 3rem;
}
h2, h3, p{
    font-family: futura-pt, sans-serif;
    font-weight: 800;
    font-style: normal;
}

p{
    font-weight: 100;
    color: var(--dark-grey);
}

h2{
    background-color: var(--yellow);
    padding: 30px;
}

#om-os{
display: flex;
flex-direction: row-reverse;
align-items: center;
background-image: url(../img/radar-bg.png);
height: 20rem;
}

#om-os img{
    height: 20rem;
}

#om-os p{
    color: var(--white);
    padding: 5px;
    margin-left: 90px;
    font-size: 1.4rem;
}

#om-os span{
    display: block;
    padding-top: 20px;
}

#live-arkiv {
    position: relative; /* Ensures the container is positioned relative for its children */
    background-image: url(../img/papir-bg-hvid.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 40rem;
    overflow: hidden;
}

#musik-plade {
    position: absolute;
    top: calc(-7%); /* Adjust for proportionate spacing based on viewport */
    left: calc(-15vw); /* Makes the element responsive to viewport width */
    z-index: 1;
    overflow: hidden;
    max-height: fit-content;
    width: 45rem;
}

#live-arkiv section{
    display: flex;
    flex-direction: row;
    align-items: center;
    background-color: var(--light-grey);
}

#live-arkiv section div{
    padding: 1rem;
}

footer{
    background-image: url(../img/papir-bg-gul.png);
    background-repeat: no-repeat;
    background-size: cover;
    display: flex;
    align-items: center;
    height: 20rem;
}

footer img{
    height: 20rem;
}

footer p{
font-weight: 600;
}






/* General Container Styling */
.horizontal-scroll-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    overflow: hidden;
    width: 100vw; /* Full viewport width */
    height: 100vh; /* Full viewport height */
}

/* Scroll Wrapper for Horizontal Layout */
.scroll-wrapper {
    display: flex;
    flex-direction: row;
    scroll-snap-type: x mandatory; /* Enables horizontal snapping */
    overflow-x: auto; /* Enables horizontal scrolling */
    scroll-behavior: smooth; /* Smooth scrolling */
    width: 100%; /* Full width of the container */
    height: 100%; /* Full height of the container */
}

/* Scrollable Items */
.scroll-item {
    scroll-snap-align: start; /* Ensures items snap to the start */
    flex: 0 0 100%; /* Each item takes 100% of the container width */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.scroll-item img {
    max-height: 60%;
    max-width: 80%;
    margin-bottom: 1rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Image shadow */
}

/* Navigation Buttons */
.scroll-button {
    position: fixed;
    z-index: 10;
    background: #222;
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    transition: background-color 0.3s ease;
    top: 50%; /* Center vertically */
    transform: translateY(-50%);
}

.scroll-button:hover {
    background: #555;
}

.scroll-button.left {
    left: 10px; /* Fixed to the left */
}

.scroll-button.right {
    right: 10px; /* Fixed to the right */
}